/*===============================Section I===================================*/

-- Que 1.

create table DEPT (
DEPTNO			int(2),
DNAME			varchar(15),
LOC				varchar(10)
);

insert into DEPT values 
(10, 'ACCOUNTING', 'NEW YORK'),
(20, 'RESEARCH', 'DALLAS'),
(30, 'SALES', 'CHICAGO'),
(40, 'OPERATIONS', 'BOSTON');

select * from dept;

-- Que 2.

create table EMP (
EMPNO			int(4),
ENAME			varchar(10),
JOB				varchar(9),
HIREDATE		date,
SAL				float(7,2),
COMM			float(7,2),
DEPTNO			int(2)
);

insert into emp values 
(7839 ,'KING','MANAGER','1991-11-17',5000,NULL,10),
(7698 ,'BLAKE','CLERK','1981-05-01',2850,NULL,30),
(7782 ,'CLARK','MANAGER','1981-06-09',2450,NULL,10),
(7566 ,'JONES','CLERK','1981-04-02',2975,NULL,20),
(7654 ,'MARTIN','SALESMAN','1981-09-28',1250,1400,30),
(7499 ,'ALLEN','SALESMAN','1981-02-20',1600,300,30);

select * from emp;

-- Que 3. Display all the employees where SAL between 2500 and 5000 (inclusive of both).

select ename from emp where sal between 2500 and 5000;


-- Que 4.	Display all the ENAMEs in descending order of ENAME.

select ename from emp order by ename desc;


-- Que 5.	Display all the JOBs in lowercase

select lower(job) from emp;


-- Que 6.	Display the ENAMEs and the lengths of the ENAMEs.

select ename , length(ename) from emp;


-- Que 7.	Display the DEPTNO and the count of employees who belong to that DEPTNO 

select DEPT.DEPTNO, COUNT(ENAME) as 'Count of Employees' from dept, emp 
where dept.deptno= emp.deptno group by dept.deptno order by dept.deptno;

-- Que 8.	Display the DNAMEs and the ENAMEs who belong to that DNAME.

select DEPT.DNAME , ENAME from dept, emp where dept.deptno= emp.deptno
order by dept.dname;


-- Que 9.	Display the position at which the string ‘AR’ occurs in the ename.

select instr(ename,'ar') as 'Position of ar in ename'from emp;


-- Que 10.	Display the HRA for each employee given that HRA is 20% of SAL.

select ENAME, SAL, SAL*0.20 as 'HRA' from emp ;


/*===============================Section II===================================*/

-- Que 1

create table TEMPP(
RESULT varchar(10),
REMARK varchar(35)
);

delimiter //
create procedure PROC1(str1 varchar(10), str2 varchar(10))
begin 
 if instr(str1,str2)>0 then
	insert into tempp values ('FALSE','String1 not exists inside String2');
 else
	insert into tempp values ('TRUE','String1 exists inside String2');
end if;
end ; //
delimiter ;
call PROC1('DAC','CDAC');
select * from tempp;

drop table tempp;



-- Que 2

create table TEMPP(
RESULT boolean,
REMARK varchar(35)
);

delimiter //
create function FUNC1(a int, b int, c int)
returns boolean
deterministic
begin
	if (a+b>c and a+c>b and b+c>a) then
		return true;
    else
		return false;
    end if;
end ; //
delimiter ;

delimiter //
create procedure abc()
begin
declare a int default 5;
declare b int default 6;
declare c int default 7;
declare res boolean;
set res= FUNC1(a,b,c);
	if res then
		insert into tempp values(res,'VALID TRIANGLE');
    else
		insert into tempp values(res,'INVALID TRIANGLE');
    end if;
end ; //
delimiter ;

CALL ABC();

select * from tempp;



